/*
 * This code has been automatically generated by testgen.
 * Do NOT edit or append.
 */

using Path = System.IO.Path;

using System.Linq; // can't alias
using NUnit.Framework; // can't alias

using Aas = AasCore.Aas3_0_RC02;

namespace AasCore.Aas3_0_RC02.Tests
{
    public class TestJsonizationOfConcreteClassesOutsideEnvironment
    {
        [Test]
        public void Test_round_trip_Extension()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Extension",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Extension)
                ? container
                : container
                    .Descend()
                    .First(something => something is Extension)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Extension could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.ExtensionFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Extension, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Extension

        [Test]
        public void Test_round_trip_AdministrativeInformation()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "AdministrativeInformation",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is AdministrativeInformation)
                ? container
                : container
                    .Descend()
                    .First(something => something is AdministrativeInformation)
                        ?? throw new System.InvalidOperationException(
                            "No instance of AdministrativeInformation could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.AdministrativeInformationFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as AdministrativeInformation, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_AdministrativeInformation

        [Test]
        public void Test_round_trip_Qualifier()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Qualifier",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Qualifier)
                ? container
                : container
                    .Descend()
                    .First(something => something is Qualifier)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Qualifier could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.QualifierFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Qualifier, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Qualifier

        [Test]
        public void Test_round_trip_AssetAdministrationShell()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "AssetAdministrationShell",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is AssetAdministrationShell)
                ? container
                : container
                    .Descend()
                    .First(something => something is AssetAdministrationShell)
                        ?? throw new System.InvalidOperationException(
                            "No instance of AssetAdministrationShell could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.AssetAdministrationShellFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as AssetAdministrationShell, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_AssetAdministrationShell

        [Test]
        public void Test_round_trip_AssetInformation()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "AssetInformation",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is AssetInformation)
                ? container
                : container
                    .Descend()
                    .First(something => something is AssetInformation)
                        ?? throw new System.InvalidOperationException(
                            "No instance of AssetInformation could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.AssetInformationFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as AssetInformation, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_AssetInformation

        [Test]
        public void Test_round_trip_Resource()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Resource",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Resource)
                ? container
                : container
                    .Descend()
                    .First(something => something is Resource)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Resource could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.ResourceFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Resource, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Resource

        [Test]
        public void Test_round_trip_SpecificAssetId()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "SpecificAssetId",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is SpecificAssetId)
                ? container
                : container
                    .Descend()
                    .First(something => something is SpecificAssetId)
                        ?? throw new System.InvalidOperationException(
                            "No instance of SpecificAssetId could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.SpecificAssetIdFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as SpecificAssetId, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_SpecificAssetId

        [Test]
        public void Test_round_trip_Submodel()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Submodel",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Submodel)
                ? container
                : container
                    .Descend()
                    .First(something => something is Submodel)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Submodel could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.SubmodelFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Submodel, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Submodel

        [Test]
        public void Test_round_trip_RelationshipElement()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "RelationshipElement",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is RelationshipElement)
                ? container
                : container
                    .Descend()
                    .First(something => something is RelationshipElement)
                        ?? throw new System.InvalidOperationException(
                            "No instance of RelationshipElement could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.RelationshipElementFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as RelationshipElement, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_RelationshipElement

        [Test]
        public void Test_round_trip_SubmodelElementList()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "SubmodelElementList",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is SubmodelElementList)
                ? container
                : container
                    .Descend()
                    .First(something => something is SubmodelElementList)
                        ?? throw new System.InvalidOperationException(
                            "No instance of SubmodelElementList could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.SubmodelElementListFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as SubmodelElementList, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_SubmodelElementList

        [Test]
        public void Test_round_trip_SubmodelElementCollection()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "SubmodelElementCollection",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is SubmodelElementCollection)
                ? container
                : container
                    .Descend()
                    .First(something => something is SubmodelElementCollection)
                        ?? throw new System.InvalidOperationException(
                            "No instance of SubmodelElementCollection could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.SubmodelElementCollectionFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as SubmodelElementCollection, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_SubmodelElementCollection

        [Test]
        public void Test_round_trip_Property()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Property",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Property)
                ? container
                : container
                    .Descend()
                    .First(something => something is Property)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Property could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.PropertyFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Property, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Property

        [Test]
        public void Test_round_trip_MultiLanguageProperty()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "MultiLanguageProperty",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is MultiLanguageProperty)
                ? container
                : container
                    .Descend()
                    .First(something => something is MultiLanguageProperty)
                        ?? throw new System.InvalidOperationException(
                            "No instance of MultiLanguageProperty could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.MultiLanguagePropertyFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as MultiLanguageProperty, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_MultiLanguageProperty

        [Test]
        public void Test_round_trip_Range()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Range",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Range)
                ? container
                : container
                    .Descend()
                    .First(something => something is Range)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Range could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.RangeFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Range, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Range

        [Test]
        public void Test_round_trip_ReferenceElement()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "ReferenceElement",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is ReferenceElement)
                ? container
                : container
                    .Descend()
                    .First(something => something is ReferenceElement)
                        ?? throw new System.InvalidOperationException(
                            "No instance of ReferenceElement could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.ReferenceElementFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as ReferenceElement, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_ReferenceElement

        [Test]
        public void Test_round_trip_Blob()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Blob",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Blob)
                ? container
                : container
                    .Descend()
                    .First(something => something is Blob)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Blob could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.BlobFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Blob, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Blob

        [Test]
        public void Test_round_trip_File()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "File",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is File)
                ? container
                : container
                    .Descend()
                    .First(something => something is File)
                        ?? throw new System.InvalidOperationException(
                            "No instance of File could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.FileFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as File, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_File

        [Test]
        public void Test_round_trip_AnnotatedRelationshipElement()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "AnnotatedRelationshipElement",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is AnnotatedRelationshipElement)
                ? container
                : container
                    .Descend()
                    .First(something => something is AnnotatedRelationshipElement)
                        ?? throw new System.InvalidOperationException(
                            "No instance of AnnotatedRelationshipElement could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.AnnotatedRelationshipElementFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as AnnotatedRelationshipElement, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_AnnotatedRelationshipElement

        [Test]
        public void Test_round_trip_Entity()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Entity",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Entity)
                ? container
                : container
                    .Descend()
                    .First(something => something is Entity)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Entity could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.EntityFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Entity, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Entity

        [Test]
        public void Test_round_trip_BasicEventElement()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "BasicEventElement",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is BasicEventElement)
                ? container
                : container
                    .Descend()
                    .First(something => something is BasicEventElement)
                        ?? throw new System.InvalidOperationException(
                            "No instance of BasicEventElement could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.BasicEventElementFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as BasicEventElement, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_BasicEventElement

        [Test]
        public void Test_round_trip_Operation()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Operation",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Operation)
                ? container
                : container
                    .Descend()
                    .First(something => something is Operation)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Operation could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.OperationFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Operation, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Operation

        [Test]
        public void Test_round_trip_OperationVariable()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "OperationVariable",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is OperationVariable)
                ? container
                : container
                    .Descend()
                    .First(something => something is OperationVariable)
                        ?? throw new System.InvalidOperationException(
                            "No instance of OperationVariable could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.OperationVariableFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as OperationVariable, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_OperationVariable

        [Test]
        public void Test_round_trip_Capability()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Capability",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Capability)
                ? container
                : container
                    .Descend()
                    .First(something => something is Capability)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Capability could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.CapabilityFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Capability, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Capability

        [Test]
        public void Test_round_trip_ConceptDescription()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "ConceptDescription",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is ConceptDescription)
                ? container
                : container
                    .Descend()
                    .First(something => something is ConceptDescription)
                        ?? throw new System.InvalidOperationException(
                            "No instance of ConceptDescription could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.ConceptDescriptionFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as ConceptDescription, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_ConceptDescription

        [Test]
        public void Test_round_trip_Reference()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Reference",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Reference)
                ? container
                : container
                    .Descend()
                    .First(something => something is Reference)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Reference could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.ReferenceFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Reference, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Reference

        [Test]
        public void Test_round_trip_Key()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Key",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Key)
                ? container
                : container
                    .Descend()
                    .First(something => something is Key)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Key could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.KeyFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Key, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Key

        [Test]
        public void Test_round_trip_LangString()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "LangString",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is LangString)
                ? container
                : container
                    .Descend()
                    .First(something => something is LangString)
                        ?? throw new System.InvalidOperationException(
                            "No instance of LangString could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.LangStringFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as LangString, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_LangString

        [Test]
        public void Test_round_trip_LangStringSet()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "LangStringSet",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is LangStringSet)
                ? container
                : container
                    .Descend()
                    .First(something => something is LangStringSet)
                        ?? throw new System.InvalidOperationException(
                            "No instance of LangStringSet could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.LangStringSetFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as LangStringSet, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_LangStringSet

        [Test]
        public void Test_round_trip_Environment()
        {
            string pathToCompleteExample = Path.Combine(
                AasCore.Aas3_0_RC02.Tests.Common.OurTestResourceDir,
                "Json",
                "Expected",
                "Environment",
                "complete.json");

            var container = AasCore.Aas3_0_RC02.Tests.CommonJson.LoadInstance(
                pathToCompleteExample);

            var instance = (
                (container is Environment)
                ? container
                : container
                    .Descend()
                    .First(something => something is Environment)
                        ?? throw new System.InvalidOperationException(
                            "No instance of Environment could be found")
            );

            var jsonObject = Aas.Jsonization.Serialize.ToJsonObject(instance);

            var anotherInstance = Aas.Jsonization.Deserialize.EnvironmentFrom(
                jsonObject);

            var anotherJsonObject = Aas.Jsonization.Serialize.ToJsonObject(
                anotherInstance);

            AasCore.Aas3_0_RC02.Tests.CommonJson.CheckJsonNodesEqual(
                jsonObject,
                anotherJsonObject,
                out Aas.Reporting.Error? error);

            if (error != null)
            {
                Assert.Fail(
                    $"When we de/serialize the instance from {pathToCompleteExample} " +
                    "as Environment, we get an error in the round trip: " +
                    $"{Reporting.GenerateJsonPath(error.PathSegments)}: " +
                    error.Cause
                );
            }
        }  // public void Test_round_trip_Environment
    }  // class TestJsonizationOfConcreteClassesOutsideEnvironment
}  // namespace AasCore.Aas3_0_RC02.Tests

/*
 * This code has been automatically generated by testgen.
 * Do NOT edit or append.
 */
