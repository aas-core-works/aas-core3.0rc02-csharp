/*
 * This code has been automatically generated by testgen.
 * Do NOT edit or append.
 */

using Path = System.IO.Path;

using Aas = AasCore.Aas3_0_RC02;  // renamed

namespace AasCore.Aas3_0_RC02.Tests
{
    /// <summary>
    /// Provide methods to load instances from JSON test data.
    /// </summary>
    public static class CommonJsonization
    {
        public static Aas.Extension LoadCompleteExtension()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Extension",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Extension>(
                container);

            return instance;
        }  // public static Aas.Extension LoadCompleteExtension

        public static Aas.Extension LoadMinimalExtension()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Extension",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Extension>(
                container);

            return instance;
        }  // public static Aas.Extension LoadMinimalExtension

        public static Aas.AdministrativeInformation LoadCompleteAdministrativeInformation()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AdministrativeInformation",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.AdministrativeInformation>(
                container);

            return instance;
        }  // public static Aas.AdministrativeInformation LoadCompleteAdministrativeInformation

        public static Aas.AdministrativeInformation LoadMinimalAdministrativeInformation()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AdministrativeInformation",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.AdministrativeInformation>(
                container);

            return instance;
        }  // public static Aas.AdministrativeInformation LoadMinimalAdministrativeInformation

        public static Aas.Qualifier LoadCompleteQualifier()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Qualifier",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Qualifier>(
                container);

            return instance;
        }  // public static Aas.Qualifier LoadCompleteQualifier

        public static Aas.Qualifier LoadMinimalQualifier()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Qualifier",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Qualifier>(
                container);

            return instance;
        }  // public static Aas.Qualifier LoadMinimalQualifier

        public static Aas.AssetAdministrationShell LoadCompleteAssetAdministrationShell()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AssetAdministrationShell",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.AssetAdministrationShell>(
                container);

            return instance;
        }  // public static Aas.AssetAdministrationShell LoadCompleteAssetAdministrationShell

        public static Aas.AssetAdministrationShell LoadMinimalAssetAdministrationShell()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AssetAdministrationShell",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.AssetAdministrationShell>(
                container);

            return instance;
        }  // public static Aas.AssetAdministrationShell LoadMinimalAssetAdministrationShell

        public static Aas.AssetInformation LoadCompleteAssetInformation()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AssetInformation",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.AssetInformation>(
                container);

            return instance;
        }  // public static Aas.AssetInformation LoadCompleteAssetInformation

        public static Aas.AssetInformation LoadMinimalAssetInformation()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AssetInformation",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.AssetInformation>(
                container);

            return instance;
        }  // public static Aas.AssetInformation LoadMinimalAssetInformation

        public static Aas.Resource LoadCompleteResource()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Resource",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Resource>(
                container);

            return instance;
        }  // public static Aas.Resource LoadCompleteResource

        public static Aas.Resource LoadMinimalResource()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Resource",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Resource>(
                container);

            return instance;
        }  // public static Aas.Resource LoadMinimalResource

        public static Aas.SpecificAssetId LoadCompleteSpecificAssetId()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "SpecificAssetId",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.SpecificAssetId>(
                container);

            return instance;
        }  // public static Aas.SpecificAssetId LoadCompleteSpecificAssetId

        public static Aas.SpecificAssetId LoadMinimalSpecificAssetId()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "SpecificAssetId",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.SpecificAssetId>(
                container);

            return instance;
        }  // public static Aas.SpecificAssetId LoadMinimalSpecificAssetId

        public static Aas.Submodel LoadCompleteSubmodel()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Submodel",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Submodel>(
                container);

            return instance;
        }  // public static Aas.Submodel LoadCompleteSubmodel

        public static Aas.Submodel LoadMinimalSubmodel()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Submodel",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Submodel>(
                container);

            return instance;
        }  // public static Aas.Submodel LoadMinimalSubmodel

        public static Aas.RelationshipElement LoadCompleteRelationshipElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "RelationshipElement",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.RelationshipElement>(
                container);

            return instance;
        }  // public static Aas.RelationshipElement LoadCompleteRelationshipElement

        public static Aas.RelationshipElement LoadMinimalRelationshipElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "RelationshipElement",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.RelationshipElement>(
                container);

            return instance;
        }  // public static Aas.RelationshipElement LoadMinimalRelationshipElement

        public static Aas.SubmodelElementList LoadCompleteSubmodelElementList()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "SubmodelElementList",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.SubmodelElementList>(
                container);

            return instance;
        }  // public static Aas.SubmodelElementList LoadCompleteSubmodelElementList

        public static Aas.SubmodelElementList LoadMinimalSubmodelElementList()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "SubmodelElementList",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.SubmodelElementList>(
                container);

            return instance;
        }  // public static Aas.SubmodelElementList LoadMinimalSubmodelElementList

        public static Aas.SubmodelElementCollection LoadCompleteSubmodelElementCollection()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "SubmodelElementCollection",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.SubmodelElementCollection>(
                container);

            return instance;
        }  // public static Aas.SubmodelElementCollection LoadCompleteSubmodelElementCollection

        public static Aas.SubmodelElementCollection LoadMinimalSubmodelElementCollection()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "SubmodelElementCollection",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.SubmodelElementCollection>(
                container);

            return instance;
        }  // public static Aas.SubmodelElementCollection LoadMinimalSubmodelElementCollection

        public static Aas.Property LoadCompleteProperty()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Property",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Property>(
                container);

            return instance;
        }  // public static Aas.Property LoadCompleteProperty

        public static Aas.Property LoadMinimalProperty()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Property",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Property>(
                container);

            return instance;
        }  // public static Aas.Property LoadMinimalProperty

        public static Aas.MultiLanguageProperty LoadCompleteMultiLanguageProperty()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "MultiLanguageProperty",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.MultiLanguageProperty>(
                container);

            return instance;
        }  // public static Aas.MultiLanguageProperty LoadCompleteMultiLanguageProperty

        public static Aas.MultiLanguageProperty LoadMinimalMultiLanguageProperty()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "MultiLanguageProperty",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.MultiLanguageProperty>(
                container);

            return instance;
        }  // public static Aas.MultiLanguageProperty LoadMinimalMultiLanguageProperty

        public static Aas.Range LoadCompleteRange()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Range",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Range>(
                container);

            return instance;
        }  // public static Aas.Range LoadCompleteRange

        public static Aas.Range LoadMinimalRange()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Range",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Range>(
                container);

            return instance;
        }  // public static Aas.Range LoadMinimalRange

        public static Aas.ReferenceElement LoadCompleteReferenceElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "ReferenceElement",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.ReferenceElement>(
                container);

            return instance;
        }  // public static Aas.ReferenceElement LoadCompleteReferenceElement

        public static Aas.ReferenceElement LoadMinimalReferenceElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "ReferenceElement",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.ReferenceElement>(
                container);

            return instance;
        }  // public static Aas.ReferenceElement LoadMinimalReferenceElement

        public static Aas.Blob LoadCompleteBlob()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Blob",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Blob>(
                container);

            return instance;
        }  // public static Aas.Blob LoadCompleteBlob

        public static Aas.Blob LoadMinimalBlob()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Blob",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Blob>(
                container);

            return instance;
        }  // public static Aas.Blob LoadMinimalBlob

        public static Aas.File LoadCompleteFile()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "File",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.File>(
                container);

            return instance;
        }  // public static Aas.File LoadCompleteFile

        public static Aas.File LoadMinimalFile()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "File",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.File>(
                container);

            return instance;
        }  // public static Aas.File LoadMinimalFile

        public static Aas.AnnotatedRelationshipElement LoadCompleteAnnotatedRelationshipElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AnnotatedRelationshipElement",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.AnnotatedRelationshipElement>(
                container);

            return instance;
        }  // public static Aas.AnnotatedRelationshipElement LoadCompleteAnnotatedRelationshipElement

        public static Aas.AnnotatedRelationshipElement LoadMinimalAnnotatedRelationshipElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AnnotatedRelationshipElement",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.AnnotatedRelationshipElement>(
                container);

            return instance;
        }  // public static Aas.AnnotatedRelationshipElement LoadMinimalAnnotatedRelationshipElement

        public static Aas.Entity LoadCompleteEntity()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Entity",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Entity>(
                container);

            return instance;
        }  // public static Aas.Entity LoadCompleteEntity

        public static Aas.Entity LoadMinimalEntity()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Entity",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Entity>(
                container);

            return instance;
        }  // public static Aas.Entity LoadMinimalEntity

        public static Aas.EventPayload LoadCompleteEventPayload()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "SelfContained",
                "Expected",
                "EventPayload",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var instance = Aas.Jsonization.Deserialize.EventPayloadFrom(
               node);

            return instance;
        }  // public static Aas.EventPayload LoadCompleteEventPayload

        public static Aas.EventPayload LoadMinimalEventPayload()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "SelfContained",
                "Expected",
                "EventPayload",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var instance = Aas.Jsonization.Deserialize.EventPayloadFrom(
               node);

            return instance;
        }  // public static Aas.EventPayload LoadMinimalEventPayload

        public static Aas.BasicEventElement LoadCompleteBasicEventElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "BasicEventElement",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.BasicEventElement>(
                container);

            return instance;
        }  // public static Aas.BasicEventElement LoadCompleteBasicEventElement

        public static Aas.BasicEventElement LoadMinimalBasicEventElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "BasicEventElement",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.BasicEventElement>(
                container);

            return instance;
        }  // public static Aas.BasicEventElement LoadMinimalBasicEventElement

        public static Aas.Operation LoadCompleteOperation()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Operation",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Operation>(
                container);

            return instance;
        }  // public static Aas.Operation LoadCompleteOperation

        public static Aas.Operation LoadMinimalOperation()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Operation",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Operation>(
                container);

            return instance;
        }  // public static Aas.Operation LoadMinimalOperation

        public static Aas.OperationVariable LoadCompleteOperationVariable()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "OperationVariable",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.OperationVariable>(
                container);

            return instance;
        }  // public static Aas.OperationVariable LoadCompleteOperationVariable

        public static Aas.OperationVariable LoadMinimalOperationVariable()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "OperationVariable",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.OperationVariable>(
                container);

            return instance;
        }  // public static Aas.OperationVariable LoadMinimalOperationVariable

        public static Aas.Capability LoadCompleteCapability()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Capability",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Capability>(
                container);

            return instance;
        }  // public static Aas.Capability LoadCompleteCapability

        public static Aas.Capability LoadMinimalCapability()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Capability",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Capability>(
                container);

            return instance;
        }  // public static Aas.Capability LoadMinimalCapability

        public static Aas.ConceptDescription LoadCompleteConceptDescription()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "ConceptDescription",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.ConceptDescription>(
                container);

            return instance;
        }  // public static Aas.ConceptDescription LoadCompleteConceptDescription

        public static Aas.ConceptDescription LoadMinimalConceptDescription()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "ConceptDescription",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.ConceptDescription>(
                container);

            return instance;
        }  // public static Aas.ConceptDescription LoadMinimalConceptDescription

        public static Aas.Reference LoadCompleteReference()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Reference",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Reference>(
                container);

            return instance;
        }  // public static Aas.Reference LoadCompleteReference

        public static Aas.Reference LoadMinimalReference()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Reference",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Reference>(
                container);

            return instance;
        }  // public static Aas.Reference LoadMinimalReference

        public static Aas.Key LoadCompleteKey()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Key",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Key>(
                container);

            return instance;
        }  // public static Aas.Key LoadCompleteKey

        public static Aas.Key LoadMinimalKey()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Key",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.Key>(
                container);

            return instance;
        }  // public static Aas.Key LoadMinimalKey

        public static Aas.LangString LoadCompleteLangString()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangString",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.LangString>(
                container);

            return instance;
        }  // public static Aas.LangString LoadCompleteLangString

        public static Aas.LangString LoadMinimalLangString()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangString",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.LangString>(
                container);

            return instance;
        }  // public static Aas.LangString LoadMinimalLangString

        public static Aas.LangStringSet LoadCompleteLangStringSet()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangStringSet",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.LangStringSet>(
                container);

            return instance;
        }  // public static Aas.LangStringSet LoadCompleteLangStringSet

        public static Aas.LangStringSet LoadMinimalLangStringSet()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangStringSet",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.LangStringSet>(
                container);

            return instance;
        }  // public static Aas.LangStringSet LoadMinimalLangStringSet

        public static Aas.DataSpecificationContent LoadCompleteDataSpecificationContent()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "DataSpecificationContent",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.DataSpecificationContent>(
                container);

            return instance;
        }  // public static Aas.DataSpecificationContent LoadCompleteDataSpecificationContent

        public static Aas.DataSpecificationContent LoadMinimalDataSpecificationContent()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "DataSpecificationContent",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.DataSpecificationContent>(
                container);

            return instance;
        }  // public static Aas.DataSpecificationContent LoadMinimalDataSpecificationContent

        public static Aas.DataSpecification LoadCompleteDataSpecification()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "DataSpecification",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.DataSpecification>(
                container);

            return instance;
        }  // public static Aas.DataSpecification LoadCompleteDataSpecification

        public static Aas.DataSpecification LoadMinimalDataSpecification()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "DataSpecification",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            var instance = Aas.Tests.Common.MustFind<Aas.DataSpecification>(
                container);

            return instance;
        }  // public static Aas.DataSpecification LoadMinimalDataSpecification

        public static Aas.Environment LoadCompleteEnvironment()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "SelfContained",
                "Expected",
                "Environment",
                "complete.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var instance = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            return instance;
        }  // public static Aas.Environment LoadCompleteEnvironment

        public static Aas.Environment LoadMinimalEnvironment()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "SelfContained",
                "Expected",
                "Environment",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var instance = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

            return instance;
        }  // public static Aas.Environment LoadMinimalEnvironment
    }  // class CommonJsonization
}  // namespace AasCore.Aas3_0_RC02.Tests

/*
 * This code has been automatically generated by testgen.
 * Do NOT edit or append.
 */
