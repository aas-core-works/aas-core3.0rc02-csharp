### YamlMime:ManagedReference
items:
- uid: AasCore.Aas3_0_RC02.Reporting
  commentId: T:AasCore.Aas3_0_RC02.Reporting
  id: Reporting
  parent: AasCore.Aas3_0_RC02
  children:
  - AasCore.Aas3_0_RC02.Reporting.GenerateJsonPath(ICollection{AasCore.Aas3_0_RC02.Reporting.Segment})
  - AasCore.Aas3_0_RC02.Reporting.GenerateRelativeXPath(ICollection{AasCore.Aas3_0_RC02.Reporting.Segment})
  langs:
  - csharp
  - vb
  name: Reporting
  nameWithType: Reporting
  fullName: AasCore.Aas3_0_RC02.Reporting
  type: Class
  source:
    remote:
      path: src/AasCore.Aas3_0_RC02/reporting.cs
      branch: mristin/Add-documentation
      repo: https://github.com/aas-core-works/aas-core3.0rc02-csharp.git
    id: Reporting
    path: ../../src/AasCore.Aas3_0_RC02/reporting.cs
    startLine: 15
  assemblies:
  - AasCore.Aas3_0_RC02
  namespace: AasCore.Aas3_0_RC02
  summary: "\nProvide reporting for de/serialization and verification.\n"
  example: []
  syntax:
    content: 'public static class Reporting : object'
    content.vb: >-
      Public Module Reporting

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AasCore.Aas3_0_RC02.Reporting.GenerateJsonPath(ICollection{AasCore.Aas3_0_RC02.Reporting.Segment})
  commentId: M:AasCore.Aas3_0_RC02.Reporting.GenerateJsonPath(ICollection{AasCore.Aas3_0_RC02.Reporting.Segment})
  id: GenerateJsonPath(ICollection{AasCore.Aas3_0_RC02.Reporting.Segment})
  parent: AasCore.Aas3_0_RC02.Reporting
  langs:
  - csharp
  - vb
  name: GenerateJsonPath(ICollection<Reporting.Segment>)
  nameWithType: Reporting.GenerateJsonPath(ICollection<Reporting.Segment>)
  fullName: AasCore.Aas3_0_RC02.Reporting.GenerateJsonPath(ICollection<AasCore.Aas3_0_RC02.Reporting.Segment>)
  type: Method
  source:
    remote:
      path: src/AasCore.Aas3_0_RC02/reporting.cs
      branch: mristin/Add-documentation
      repo: https://github.com/aas-core-works/aas-core3.0rc02-csharp.git
    id: GenerateJsonPath
    path: ../../src/AasCore.Aas3_0_RC02/reporting.cs
    startLine: 54
  assemblies:
  - AasCore.Aas3_0_RC02
  namespace: AasCore.Aas3_0_RC02
  summary: "\nGenerate a JSON Path based on the path segments.\n"
  remarks: "\nSee, for example, this page for more information on JSON path:\nhttps://support.smartbear.com/alertsite/docs/monitors/api/endpoint/jsonpath.html\n"
  example: []
  syntax:
    content: public static string GenerateJsonPath(ICollection<Reporting.Segment> segments)
    parameters:
    - id: segments
      type: ICollection{AasCore.Aas3_0_RC02.Reporting.Segment}
    return:
      type: System.String
    content.vb: Public Shared Function GenerateJsonPath(segments As ICollection(Of Reporting.Segment)) As String
  overload: AasCore.Aas3_0_RC02.Reporting.GenerateJsonPath*
  nameWithType.vb: Reporting.GenerateJsonPath(ICollection(Of Reporting.Segment))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AasCore.Aas3_0_RC02.Reporting.GenerateJsonPath(ICollection(Of AasCore.Aas3_0_RC02.Reporting.Segment))
  name.vb: GenerateJsonPath(ICollection(Of Reporting.Segment))
- uid: AasCore.Aas3_0_RC02.Reporting.GenerateRelativeXPath(ICollection{AasCore.Aas3_0_RC02.Reporting.Segment})
  commentId: M:AasCore.Aas3_0_RC02.Reporting.GenerateRelativeXPath(ICollection{AasCore.Aas3_0_RC02.Reporting.Segment})
  id: GenerateRelativeXPath(ICollection{AasCore.Aas3_0_RC02.Reporting.Segment})
  parent: AasCore.Aas3_0_RC02.Reporting
  langs:
  - csharp
  - vb
  name: GenerateRelativeXPath(ICollection<Reporting.Segment>)
  nameWithType: Reporting.GenerateRelativeXPath(ICollection<Reporting.Segment>)
  fullName: AasCore.Aas3_0_RC02.Reporting.GenerateRelativeXPath(ICollection<AasCore.Aas3_0_RC02.Reporting.Segment>)
  type: Method
  source:
    remote:
      path: src/AasCore.Aas3_0_RC02/reporting.cs
      branch: mristin/Add-documentation
      repo: https://github.com/aas-core-works/aas-core3.0rc02-csharp.git
    id: GenerateRelativeXPath
    path: ../../src/AasCore.Aas3_0_RC02/reporting.cs
    startLine: 122
  assemblies:
  - AasCore.Aas3_0_RC02
  namespace: AasCore.Aas3_0_RC02
  summary: "\nGenerate a relative XPath based on the path segments.\n"
  remarks: "\nThis method leaves out the leading slash (&apos;/&apos;). This is helpful if\nto embed the error report in a larger document with a prefix etc.\n"
  example: []
  syntax:
    content: public static string GenerateRelativeXPath(ICollection<Reporting.Segment> segments)
    parameters:
    - id: segments
      type: ICollection{AasCore.Aas3_0_RC02.Reporting.Segment}
    return:
      type: System.String
    content.vb: Public Shared Function GenerateRelativeXPath(segments As ICollection(Of Reporting.Segment)) As String
  overload: AasCore.Aas3_0_RC02.Reporting.GenerateRelativeXPath*
  nameWithType.vb: Reporting.GenerateRelativeXPath(ICollection(Of Reporting.Segment))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AasCore.Aas3_0_RC02.Reporting.GenerateRelativeXPath(ICollection(Of AasCore.Aas3_0_RC02.Reporting.Segment))
  name.vb: GenerateRelativeXPath(ICollection(Of Reporting.Segment))
references:
- uid: AasCore.Aas3_0_RC02
  commentId: N:AasCore.Aas3_0_RC02
  name: AasCore.Aas3_0_RC02
  nameWithType: AasCore.Aas3_0_RC02
  fullName: AasCore.Aas3_0_RC02
- uid: AasCore.Aas3_0_RC02.Reporting.GenerateJsonPath*
  commentId: Overload:AasCore.Aas3_0_RC02.Reporting.GenerateJsonPath
  name: GenerateJsonPath
  nameWithType: Reporting.GenerateJsonPath
  fullName: AasCore.Aas3_0_RC02.Reporting.GenerateJsonPath
- uid: ICollection{AasCore.Aas3_0_RC02.Reporting.Segment}
  commentId: '!:ICollection{AasCore.Aas3_0_RC02.Reporting.Segment}'
  definition: ICollection`1
  name: ICollection<Reporting.Segment>
  nameWithType: ICollection<Reporting.Segment>
  fullName: ICollection<AasCore.Aas3_0_RC02.Reporting.Segment>
  nameWithType.vb: ICollection(Of Reporting.Segment)
  fullName.vb: ICollection(Of AasCore.Aas3_0_RC02.Reporting.Segment)
  name.vb: ICollection(Of Reporting.Segment)
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AasCore.Aas3_0_RC02.Reporting.Segment
    name: Reporting.Segment
    nameWithType: Reporting.Segment
    fullName: AasCore.Aas3_0_RC02.Reporting.Segment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AasCore.Aas3_0_RC02.Reporting.Segment
    name: Reporting.Segment
    nameWithType: Reporting.Segment
    fullName: AasCore.Aas3_0_RC02.Reporting.Segment
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: AasCore.Aas3_0_RC02.Reporting.GenerateRelativeXPath*
  commentId: Overload:AasCore.Aas3_0_RC02.Reporting.GenerateRelativeXPath
  name: GenerateRelativeXPath
  nameWithType: Reporting.GenerateRelativeXPath
  fullName: AasCore.Aas3_0_RC02.Reporting.GenerateRelativeXPath
